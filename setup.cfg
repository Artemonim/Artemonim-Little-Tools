[flake8]
# * Maximum line length
max-line-length = 88
# * Exclude specific directories and files
exclude = 
    .git,
    __pycache__,
    .venv,
    .eggs,
    *.egg-info,
    build,
    dist,
    legacy_*.py,
    refactoring_*.py,
    temporary,
    0-INPUT-0,
    0-OUTPUT-0,
    ben2_output,
    tools
# * Ignore specific error codes that conflict with black or are too strict
ignore = 
    E203
    E501
    W503
    E722
# * Select specific error codes to check
select = E,W,F,C
# * Maximum complexity for McCabe plugin
max-complexity = 15
# * Count errors and warnings
count = True
# * Show source code for each error
show-source = True
# * Show statistics
statistics = True

[mypy]
# * Files to check
files = littletools_cli,littletools_core,littletools_speech,littletools_txt,littletools_video
# * Exclude specific patterns
exclude = (?x)(
    legacy_.*\.py$
    | refactoring_.*\.py$
    | temporary/
    | 0-INPUT-0/
    | 0-OUTPUT-0/
    | ben2_output/
    | tools/
    )
# * Python version to target
python_version = 3.11
# * Strict mode settings
strict = True
warn_return_any = True
warn_unused_configs = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
# * Error reporting
show_error_codes = True
show_column_numbers = True
# * Import handling
ignore_missing_imports = False
follow_imports = normal
# * Cache directory
cache_dir = .mypy_cache
# * Namespace packages
namespace_packages = True
# * Explicit package roots
explicit_package_bases = True
mypy_path = littletools_cli:littletools_core:littletools_speech:littletools_txt:littletools_video

[isort]
# * Profile to use (black compatible)
profile = black
# * Line length to match black
line_length = 88
# * Multi-line output mode
multi_line_output = 3
# * Include trailing comma
include_trailing_comma = True
# * Force grid wrap
force_grid_wrap = 0
# * Use parentheses for multi-line imports
use_parentheses = True
# * Ensure new line before comments
ensure_newline_before_comments = True
# * Source paths
src_paths = littletools_cli,littletools_core,littletools_speech,littletools_txt,littletools_video
# * Skip specific files and directories
skip = legacy_converter.py,legacy_menu.py,refactoring_converter.py,temporary,0-INPUT-0,0-OUTPUT-0,ben2_output,tools
# * Known first party modules
known_first_party = littletools_cli,littletools_core,littletools_speech,littletools_txt,littletools_video
# * Force single line imports for specific modules
force_single_line = True
# * Import sections
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
# * Show diff when changes would be made
diff = True

[tool:pytest]
# * Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
# * Minimum version
minversion = 6.0
# * Add current directory to Python path
addopts = -v --tb=short --strict-markers
# * Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests 